def time_mod(time, attempt) {(attempt == 1) ? time : (time + (attempt * (time / 2)))}
def memory_mod(memory, attempt) {(attempt == 1) ? memory : (memory + (attempt * (memory / 2)))}

slurm_account = 'mx82'
normal_option = '--qos=normal --account=' + slurm_account
shortq_option = '--qos=shortq --account=' + slurm_account
genomics_option = '--qos=genomics --account=' + slurm_account

tower {
  accessToken = '222bb6a92dfc89e33e187c1672a5f59ecd3ce799'
  enabled = true
}

profiles {
    slurm {

        process.executor = 'slurm'
        process.queue = { task.time > 4.hour ? 'comp' : 'genomics' }
        process.clusterOptions = {task.time > 4.hour ? normal_option : genomics_option }


        executor {
           name = 'slurm'
           queueSize = 200
           pollInterval = '120 sec'
        }

        singularity  {
          enabled = true
          autoMounts = true
        }
        
        process {
    
            executor = 'slurm'
            stageInMode = 'symlink'
            errorStrategy = 'retry'
            maxRetries = 2
            cache = 'lenient'

            withLabel: presto {
               container = 'file:///scratch/mx82/bin/immcantation_suite-4.3.0.sif'
               cpus = 12
               memory = { memory_mod(8.GB, task.attempt) }
               time = { time_mod(1.day, task.attempt) }
               queue = 'comp'
               clusterOptions = '--account=mx82'
            }


            
        }
    }
    local {
        executor {
        name = 'local'
        queueSize = 32
        pollInterval = '30 sec'
        }
        process {
            executor = 'local'
            stageInMode = 'symlink'
            errorStrategy = 'retry' 
            maxRetries = 5
            cache = 'lenient'

            withLabel: small_1 {
                cpus = 1
            }

            withLabel: small_2 {
                cpus = 2
            }

            withLabel: vardict {
                cpus = 2
            }
        }
    }
}
